PhpTaskDaemon
=============

* PhpTaskDaemon Introduction
* Installation
* Usage
* Contribute
* License
* Contact Information


PhpTaskDaemon Introduction
--------------------------
PhpTaskDaemon is a library for creating php daemons for unix environments
(requirement: pcntl and posix extension). It provides a simple api consisting
of two methods for defining the loading of a task queue and the execution of a
single task. The tasks are run by a manager, which defines the way when and how
tasks are executed. A single command line script is used to start, stop and
monitor the daemon. 


Features
--------
* Start multiple workers/instances of tasks
* Supports multiple task managers:
	* Interval
	* Cron
	* Forked
	* Gearman
* Requesting current status of task managers using IPC


Requirements
------------
* PHP 5.3
	* command line
	* pcntl extension
	* shared memory
* Zend Framework
	* Zend_Log
	* Zend_Console_GetOpt
	* Zend_Config


Installation
------------
Basic installation 
* Extract the package
* Edit the configuration file: src/application/configs/daemon.ini
* Start the executable in src/bin

Startup on boot
* Edit the file (doc/files/init-script)
* Copy the edited init script file to /etc/init.d/phptaskdaemon

Restart by cron
* Add a crontab job:  
	* * * * * * /path/to/phptaskdaemon/bin/phptaskdaemon --action keeprunning

Optional: Web Monitor 
* Edit the file (doc/files/apache.conf) to your needs 
* Copy the edited apache conf to /etc/apache2/sites-available/phptaskdaemon
* Enable the phptaskdaemon site: a2enmod phptaskdaemon
* Restart the apache server


Usage
-----
To use the PhpTaskDaemon you need to add task definitions. A task definition 
exists of a php class implementing an interface with two methods. The first 
method 'loadQueue' needs to load a queue of tasks to execute. The return value
is an array of tasks. A tasks consists of an array with input data. The second
method is called 'executeTask' and executes a single task. Each task class can
define a variable for setting a manager. The manager determines how and when 
the task is executed.

Command line:
* Start:		./daemon --verbose --action start
* Stop:			./daemon --action start
* Status		./daemon --action status
* Monitor		./daemon --action monitor

PHP API Example:

  $daemon = new Dew_Daemon();
  $status = $daemon->status();
  var_dump($status);
  

Contact Information
-------------------
For more info about the PhpTaskDAemonapplication see the website:

GitHub:		https://github.com/DirkEngels/PhpTaskDaemon
Blog:		http://blog.dirkengels.com/category/phptaskdaemon/

